====================================
# Test file for `7-base_geometry.py`
====================================

# Import the module
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>>
>>> bg = BaseGeometry()
>>>

# Check for integer value
>>> bg.integer_validator("my_int", 12)
>>>

# Check for another integer value
>>> bg.integer_validator("width", 89)
>>>

# Testing the TypeError exceptions
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
  ...
TypeError: name must be an integer

# Testing the ValueError exceptions
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
  ...
ValueError: age must be greater than 0

# Testing the area() method
>>> bg.area()
Traceback (most recent call last):
  ...
Exception: area() is not implemented

# Testing integer_validator with a tuple input
>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
  ...
TypeError: age must be an integer

# Testing integer_validator with a list input
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
  ...
TypeError: age must be an integer

# Testing integer_validator with a boolean input
>>> bg.integer_validator("age", True)
Traceback (most recent call last):
  ...
TypeError: age must be an integer

# Testing integer_validator with a set input
>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
  ...
TypeError: age must be an integer

# Testing integer_validator with a None input
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
  ...
TypeError: age must be an integer

# Testing integer_validator without specifying value
>>> bg.integer_validator("age")
Traceback (most recent call last):
  ...
TypeError: age must be an integer

# Testing integer_validator without specifying name and value
>>> bg.integer_validator()
Traceback (most recent call last):
  ...
TypeError: integer_validator() 
